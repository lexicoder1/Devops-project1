pipeline {

     environment {
        REGISTRY = 'lexikhoder'   // Docker registry (e.g., Docker Hub or private registry)
        IMAGE_NAME = 'backend'     // Name of your Docker image
        
    }

    agent {
        docker {
            image 'lexikhoder/node-agent:1'
            args '-u root -v /var/run/docker.sock:/var/run/docker.sock'
        }
    }
   
    
    stages {
        stage('Checkout') {
            steps {
                // Clone your GitHub repository
                git 'https://github.com/lexicoder1/Devops-project1.git'
            }
        }

        stage('Testing') {
            steps {
                sh "cd App/back-end"
                // testing code
                sh "echo testing "
            }
        }
        
        stage('Build Docker Image') {
            steps {
            
                    
                    sh "docker build -t ${REGISTRY}/${IMAGE_NAME}:${BUILD_NUMBER} ."
                
            }
        }
       
        stage('Docker Login') {
            steps {
                script{
                    // Log in to Docker
                withDockerRegistry(credentialsId: 'docker-pass') {
                        
                    sh "docker push ${REGISTRY}/${IMAGE_NAME}:${BUILD_NUMBER}"
                }
                }
                    
                    
                
            }
        }
        
        stage('Update Deployment File') {
            environment {
                GIT_REPO_NAME = "Devops-project1"
                GIT_USER_NAME = "lexicoder1"
                

            }
            steps {
                withCredentials([string(credentialsId: 'git-token', variable: 'GITHUB_TOKEN')]) {
                    sh '''
                        PREV_BUILD_NUMBER=$((BUILD_NUMBER - 1))
                        git config --global user.email "uzorifeanyi1000@gmail.com"
                        git config --global user.name "uzor ifeanyi"
                        git config --global --add safe.directory $WORKSPACE
                        cd Deployment/Deployment/
                        cat values.yaml
                        sed -i "s/lexikhoder\\/${IMAGE_NAME}:${PREV_BUILD_NUMBER}/lexikhoder\\/${IMAGE_NAME}:${BUILD_NUMBER}/g" values.yaml
                        cd ..
                        git pull 
                        git add .
                        git commit -m "updated ${BUILD_NUMBER}" 
                        git push
                    '''
                }   
            }
        }
    }
    
    post {
        
        always {
            script {
                
               
                // Delete the Docker image after the build
                sh "docker rmi -f lexikhoder/nodedocker:1 || true"
                sh "docker rmi ${REGISTRY}/${IMAGE_NAME}:${BUILD_NUMBER} || true "
                // Optionally clean up dangling images
                sh "docker image prune -f || true"
                sh "docker system prune -f || true " 
            }
        }
    }
   
}